# search "programme starts" as with fortran parallel

import math
#"20 checking for zero energy input" may need to be a function so it can be used in both the else where it currently resides and in the preceding elif
#element_num = 52 is the last element num at the moment

#not sure about 'erf', search to see where orignally used
#double check 'else: #mane = '' and z > 0 and z <= 94' to make sure I didn't forget something

class elements():
    #em starts at S (16) it seems, what should the 1st 15 be?
    def __init__(self, name, ek, el, ak, al, am, an, den, cf, atwt, coh, cih, ka, kb, la, lb, em, l2, l3, lj3, fek, fel):
        self.name = name    #string
        self.ek = ek        
        self.el = el
        self.ak = ak        #number array
        self.al = al        #number array
        self.am = am        #number array
        self.an = an        #number array
        self.den = den
        self.cf = cf
        self.atwt = atwt
        self.coh = coh      #number array
        self.cih = cih      #number array
        self.ka = ka        # there are no ka, kb, la, lb until Na (11), not sure if these values should be zero or what for first 10 elements
        self.kb = kb
        self.la = la
        self.lb = lb
        self.em = em        # there is no em until S (16)
        self.l2 = l2        #there are no l2, l3, lj3, until Mg (12)
        self.l3 = l3
        self.lj3 = lj3
        self.fek = fek      
        self.fel = fel

lj2 = 1.41                  #lj2 was standalone in original fortran code
lj1 = 1.16000

#name, ek, el, ak, al, am, an, den, cf, atwt, coh, cih, ka, kb, la, lb, em, l2, l3, lj3, fek, fel
H = elements("H", 0.014, 0, [], [], [], [], 0.00008987, 1.674, 1.008, [], [], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, [], [])
H.ak = [2.44964, -3.34953, -0.0471370, 0.00709962]
H.al = [0, 0, 0, 0]
H.am = [0, 0, 0, 0]
H.an = [0, 0, 0, 0]
H.coh = [-0.119075, -0.937086, -0.200538, 0.0106587]
H.cih = [-2.15772, 1.32685, -0.305620, 0.0185025]
H.fek = []
H.fel = []
H.element_num = 1

#print("name:", H.name, "ek:", H.ek, "ak:", H.ak, "cih:", H.cih)    #yay it works

He = elements("He", 0.0250000,  0, [], [], [], [], .0001785, 6.64700, 4.003, [], [], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, [], [])
He.ak = [6.06488, -3.29055, -0.107256,  0.0144465]
He.al = [0, 0, 0, 0]
He.am = [0, 0, 0, 0]
He.an = [0, 0, 0, 0]
He.coh = [1.04768, -0.0851805, -0.403527, 0.0269398]
He.cih = [-2.56357,  2.02536, -0.448710,  0.0279691]
He.fel = []
He.element_num = 2

Li = elements("Li", 0.0550000,  0.0, [], [], [], [], 0.534, 11.5200, 6.940, [], [], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, [], [])
Li.ak = [7.75370, -2.81801, -0.241378,  0.0262542]
Li.al = [0, 0, 0, 0]
Li.am = [0, 0, 0, 0]
Li.an = [0, 0, 0, 0]
Li.coh = [1.34366,  0.181557, -0.423981,  0.0266190]
Li.cih = [-1.08740, 1.03368, -0.190377,  0.00779955]
Li.element_num = 3

Be = elements("Be", 0.112, 0.0, [], [], [], [], 1.848, 14.96, 9.012, [], [], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, [], [])
Be.ak = [9.04511, -2.83487, -0.210021,  0.0229526]
Be.al = [0, 0, 0, 0]
Be.am = [0, 0, 0, 0]
Be.an = [0, 0, 0, 0]
Be.coh = [2.00860, -0.0461920, -0.337018,  0.0186939]
Be.cih = [-0.690079,  0.946448, -0.171142,  0.00651413]
Be.element_num = 4

B = elements("B", 0.188000,  0.0, [], [], [], [], 2.340, 17.9500, 10.811, [], [], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00170000, [])
B.ak = [9.95057, -2.74174, -0.215138,  0.0227845]
B.al = [0, 0, 0, 0]
B.am = [0, 0, 0, 0]
B.an = [0, 0, 0, 0]
B.coh = [2.62862, -0.207916, -0.286283,  0.0144966]
B.cih = [-0.791177,  1.21611, -0.239087,  0.0117686]
B.element_num = 5

C = elements("C", 0.284000,  0.0, [], [], [], [], 2.26, 19.9400, 12.01, [], [], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00280000, [])
C.ak = [10.6879, -2.71400, -0.200530,  0.0207248]
C.al = [0, 0, 0, 0]
C.am = [0, 0, 0, 0]     
C.an = [0, 0, 0, 0]
C.coh = [3.10861, -0.260580, -0.271974,  0.0135181]
C.cih = [-0.982878,  1.46693, -0.293743,  0.0156005]
C.element_num = 6

N = elements('N ', 0.402000, 0.0, [], [], [], [], 0.001250, 23.2600, 14.008, [], [], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00520000,  [])
N.ak = [11.2765, -2.65400, -0.200445,  0.0200765]
N.al = [0, 0, 0, 0]
N.am = [0, 0, 0, 0]     # there is no am or an in the original fortran code, presumably because they're all zeroes still and someone forgot
N.an = [0, 0, 0, 0]     # ^
N.coh = [3.47760, -0.215762, -0.288874,  0.0115131]
N.cih = [-1.23693,  1.74510, -0.354660,  0.0198705]
N.element_num = 7

O = elements('O ',  0.537000,  0.0, [], [], [], [], 0.001429, 26.5700, 16.0, [], [], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00830000, [])
O.ak = [11.7130, -2.57229, -0.205893,  0.0199244]
O.al = [0, 0, 0, 0]
O.am = [0, 0, 0, 0]     # there is no am or an in the original fortran code, presumably because they're all zeroes still and someone forgot
O.an = [0, 0, 0, 0]     # ^
O.coh = [3.77239, -0.148539, -0.307124,  0.0167303]
O.cih = [-1.73679,  2.17686, -0.449050,  0.0264733]
O.element_num = 8

F = elements('F ',  0.686000,  0.0, [], [], [], [], 1.108, 31.5500, 19.0, [], [], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0130000, [])
F.ak = [12.0963, -2.44148, -0.234461,  0.0219954]
F.al = [0, 0, 0, 0]
F.am = [0, 0, 0, 0]     # there is no am or an in the original fortran code, presumably because they're all zeroes still and someone forgot
F.an = [0, 0, 0, 0]     # ^
F.coh = [4.00716, -0.0560908, -0.332017,  0.0187934]
F.cih = [-1.87570,  2.32016, -0.475412,  0.0280680]
F.element_num = 9

Ne = elements('Ne',  0.867000,  0.0, [], [], [], [], 0.0009000, 33.5100, 20.183, [], [], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0180000, [])
Ne.ak = [12.4485, -2.45819, -0.212591,  0.0196489]
Ne.al = [0, 0, 0, 0]
Ne.am = [0, 0, 0, 0]     # there is no am or an in the original fortran code, presumably because they're all zeroes still and someone forgot
Ne.an = [0, 0, 0, 0]     # ^
Ne.coh = [4.20151,  0.0416247, -0.356754,  0.0207585]
Ne.cih = [-1.75510,  2.24226, -0.447640,  0.0255801]
Ne.element_num = 10

Na = elements('Na',  1.07200,  0.0, [], [], [], [], 0.970, 38.1900, 22.997, [], [], 1.04100,  1.06700,  0.0,  0.0, 0.0, 0.0, 0.0, 0.0, 0.0230000, [])
Na.ak = [12.6777, -2.24521, -0.274873,  0.0250270]
Na.al = [10.2355, -2.55905, -0.119524,  0.0]
Na.am = [0, 0, 0, 0]     # there is no am or an in the original fortran code, presumably because they're all zeroes still and someone forgot
Na.an = [0, 0, 0, 0]     # ^
Na.coh = [4.26374,  0.134662, -0.370080,  0.0214467]
Na.cih = [-0.967717,  1.61794, -0.287191,  0.0131526]
Na.element_num = 11

#12
Mg = elements('Mg',  0.130500e+01,  0.630000e-01, [], [], [], [], 1.740, 40.3800, 24.320, [], [], 1.25400, 1.29700, 0.0, 0.0, 0.0, 0.0496000, 0.04920000,  0.0, 0.0300000, [])
Mg.ak = [12.8793, -2.12574, -0.299392,  0.0267643]
Mg.al = [10.5973, -2.89818,  0.234506,  0.0]
Mg.am = [0, 0, 0, 0]     # there is no am or an in the original fortran code, presumably because they're all zeroes still and someone forgot
Mg.an = [0, 0, 0, 0]     # ^
Mg.coh = [4.39404,  0.137858, -0.359540,  0.0202380]
Mg.cih = [-0.571611,  1.35498, -0.222491,  0.00830141]
Mg.fel = [0.0000290000, 0.00120000, 0.00120000]
Mg.element_num = 12

Al = elements('Al', 1.56000, 0.0870000, [], [], [], [], 2.720, 44.7800, 26.970, [], [], 1.48700, 1.55300, 0.0, 0.0, 0.0, 0.0729000, 0.0725000, 0.0, 0.0390000, [])
Al.ak = [13.1738, -2.18203, -0.258960,  0.0222840]
Al.al = [10.8711, -2.77860,  0.175853,  0.0]
Al.am = [0, 0, 0, 0]     # there is no am or an in the original fortran code, presumably because they're all zeroes still and someone forgot
Al.an = [0, 0, 0, 0]     # ^
Al.coh = [4.15995,  0.140549, -0.352441,  0.0193692]
Al.cih = [-0.439322,  1.30867, -0.211648,  0.00754210]
Al.fel = [ 0.0000260000, 0.000750000, 0.000750000]
Al.element_num = 13

Si = elements('Si',  1.83900,  0.118000, [], [], [], [], 2.330, 46.6300, 28.086, [], [], 1.74000,  1.83200,  0.0,  0.0, 0.0, 0.0998000,  0.0992000, 0.0, 0.0500000, [])
Si.ak = [13.2682, -1.98174, -0.316950,  0.0273928]
Si.al = [11.2237, -2.73694,  0.127557,  0.0]
Si.am = [0, 0, 0, 0]     # there is no am or an in the original fortran code, presumably because they're all zeroes still and someone forgot
Si.an = [0, 0, 0, 0]     # ^
Si.coh = [4.64678,  0.162780, -0.358563,  0.0196926]
Si.cih = [-0.414971,  1.34868, -0.222315,  0.00841959]
Si.fel = [0.0000300000, 0.000370000, 0.000380000]
Si.element_num = 14

#15
P = elements('P ',  2.14900,  0.153000, [], [], [], [], 1.820, 51.4300, 30.975, [], [], 2.01500, 2.13600, 0.0, 0.0, 0.0, 0.13600000,  0.135000, 0.0, 0.0630000, [])
P.ak = [13.3735, -1.86342, -0.339440,  0.0288858]
P.al = [11.5508, -2.92200,  0.254262,  0.0]
P.am = [0, 0, 0, 0]     # there is no am or an in the original fortran code, presumably because they're all zeroes still and someone forgot
P.an = [0, 0, 0, 0]     # ^
P.coh = [4.78525,  0.168708, -0.360383,  0.0197155]
P.cih = [-0.476903,  1.46032, -0.251331,  0.0107202]
P.fel = [0.0000390000, 0.000310000, 0.000310000]
P.element_num = 15

S = elements('S ', 2.47200, 0.193000, [], [], [], [], 2.000, 53.2400, 32.066, [], [], 2.30800,  2.46400,  0.0,  0.0, 0.0170000, 0.16360000,  0.16250000, 0.0, 0.0780000, [])
S.ak = [13.7394, -2.04786, -0.273259,  0.0229976]
S.al = [11.8181, -2.64618, -0.0968049, 0.0]
S.am = [0, 0, 0, 0]     # am and an are back! They're still zero.
S.an = [0, 0, 0, 0]     # ^
S.coh = [4.92707,  0.165746, -0.359424,  0.0195505]
S.cih = [-0.656419, 1.65408, -0.298623, 0.0142979]
S.fel = [0.0000740000, 0.000260000, 0.000260000]
S.element_num = 16

Cl = elements('Cl',  2.82200e+01, 0.238000, [], [], [], [], 1.560, 58.8700, 35.457, [], [], 2.62200, 2.81500,  0.0,  0.0, 0.0170000, 0.20200000,  0.200000, 0.0, 0.0970000, [])
Cl.ak = [13.6188, -1.71937, -0.354154, 0.0290841]
Cl.al = [12.0031, -2.41694, -0.240897, 0.0]
Cl.am = [0, 0, 0, 0]     
Cl.an = [0, 0, 0, 0]     
Cl.coh = [5.07222,  0.149127, -0.352858,  0.0189439]
Cl.cih = [-0.718627, 1.74294, -0.319429,  0.0158429]
Cl.fel = [0.000120000, 0.000240000, 0.000240000]
Cl.element_num = 17

#18
Ar = elements('Ar', 3.20200,  0.287000, [], [], [], [], .001784, 66.3200, 39.944, [], [], 2.95700, 3.19200, 0.0, 0.0, 0.0270000, 0.25060000,  0.248400, 0.0, 0.11800000, [])
Ar.ak = [13.9491, -1.82276, -0.328827,  0.0274382]
Ar.al = [12.2960, -2.63279, -0.0736600,  0.0]
Ar.am = [0, 0, 0, 0]     
Ar.an = [0, 0, 0, 0]     
Ar.coh = [5.21079, 0.135618, -0.347214,  0.0184333]
Ar.cih = [-0.682105, 1.74279, -0.317646,  0.0156467]
Ar.fel = [0.000180000, 0.000220000, 0.000220000]
Ar.element_num = 18

K = elements('K ', 3.60700, 0.341000, [], [], [], [], 0.862, 64.9300, 39.102, [], [], 3.31300, 3.58900,  0.0,  0.0, 0.0340000, 0.29730000,  0.294600, 0.0, 0.14000000, [])
K.ak = [13.7976, -1.54015, -0.394528,  0.0323561]
K.al = [12.4878, -2.53656, -0.104892, 0.0]
K.am = [0, 0, 0, 0]     
K.an = [0, 0, 0, 0]     
K.coh = [5.25587, 0.188040, -0.359623, 0.0193085]
K.cih = [-0.344007, 1.49236, -0.254135, 0.0107684]
K.fel = [0.000240000, 0.000270000, 0.000270000]
K.element_num = 19

Ca = elements('Ca', 4.03800, 0.400000, [], [], [], [], 1.550, 66.5500, 40.080, [], [], 3.69100, 4.01200, 0.0, 0.0, 0.0440000, 0.34970000,  0.346200, 0.0, 0.16300000,  [])
Ca.ak = [14.2950, -1.88644, -0.283647,  0.0226263]
Ca.al = [12.7044, -2.55011, -0.0943195, 0.0]
Ca.am = [0, 0, 0, 0]     
Ca.an = [0, 0, 0, 0]    
Ca.coh = [5.32375,  0.206685, -0.361664, 0.0193328]
Ca.cih = [-0.0982420, 1.32829, -0.213747, 0.00773065]
Ca.fel = [0.000310000, 0.000330000, 0.000330000]
Ca.element_num = 20

Sc = elements('Sc', 4.49300, 0.463000, [], [], [], [], 2.99200, 74.6500, 44.960, [], [], 4.09000, 4.46000, 0.0, 0.0, 0.0540000, 0.40360000,  0.398700, 0.0, 0.188000, [])
Sc.ak = [13.9664, -1.40872, -0.414365, 0.0334355]
Sc.al = [12.8949, -2.40609, -0.177791, 0.0]
Sc.am = [0, 0, 0, 0]     
Sc.an = [0, 0, 0, 0]    
Sc.coh = [5.43942, 0.200174, -0.359064, 0.0191027]
Sc.cih = [-0.159831, 1.39055, -0.225849, 0.00851954]
Sc.fel = [0.000390000, 0.000840000, 0.000840000]
Sc.element_num = 21

Ti = elements('Ti', 4.96500, 0.531000, [], [], [], [], 4.54000, 79.5300, 47.9, [], [], 4.51000, 4.93100, 0.0, 0.0, 0.0590000, 0.46120000,  0.453800, 0.0, 0.214000, [])
Ti.ak = [14.3506, -1.66322, -0.331539, 0.0262065]
Ti.al = [13.1075, -2.53576, -0.0957177, 0.0]
Ti.am = [0, 0, 0, 0]     
Ti.an = [0, 0, 0, 0]    
Ti.coh = [5.55039, 0.197697, -0.357694, 0.0189866]
Ti.cih = [-0.230573, 1.45848, -0.239160,  0.00938528]
Ti.fel = [0.000470000, 0.00150000, 0.00150000]
Ti.element_num = 22

V = elements('V ',  5.46500,  0.604000, [], [], [], [], 6.11000, 84.5900, 50.942, [], [], 4.95200, 5.42700,  0.0,  0.0, 0.0670000, 0.51980000,  0.51210000,  0.0, 0.243000, []) 
V.ak = [14.7601, -1.88867, -0.271861,  0.0215792]
V.al = [13.2514, -2.49765, -0.106383, 0.0]
V.am = [0, 0, 0, 0]     
V.an = [0, 0, 0, 0]     
V.coh = [5.65514, 0.199533, -0.357487, 0.0189691]
V.cih = [-0.308103, 1.52879, -0.252768, 0.0102571]
V.fel = [0.000580000, 0.00260000, 0.00260000]
V.element_num = 23

Cr = elements('Cr', 5.98900, 0.682000, [], [], [], [], 7.19000, 86.3400, 51.996, [], [], 5.41400, 5.94600, 0.0, 0.0, 0.0740000, 0.58380000,  0.57410000,  0.0, 0.275000, [])
Cr.ak = [14.8019, -1.82430, -0.279116, 0.0217324]
Cr.al = [13.4236, -2.51532, -0.101999,  0.0]
Cr.am = [0, 0, 0, 0]     
Cr.an = [0, 0, 0, 0]    
Cr.coh = [5.77399, 0.203858, -0.359699, 0.0192225]
Cr.cih = [-0.387641, 1.59727, -0.266240, 0.0111523]
Cr.fel = [0.000710000, 0.00370000, 0.00370000]
Cr.element_num = 24

#25
Mn = elements('Mn', 6.54000, 0.754000, [], [], [], [], 7.42000, 91.2200, 54.940, [], [], 5.89800, 6.49000, 0.0, 0.0, 0.0840000, 0.64990000,  0.63870000,  0.0, 0.308000, [])
Mn.ak = [14.8965, -1.79872, -0.283664, 0.0222095]
Mn.al = [13.5761, -2.49761, -0.105493, 0.0]
Mn.am = [0, 0, 0, 0]     
Mn.an = [0, 0, 0, 0]    
Mn.coh = [5.84604, 0.213814, -0.359718, 0.0191459]
Mn.cih = [-0.247059, 1.49722, -0.238781, 0.00893208]
Mn.fel = [0.000840000, 0.00500000, 0.00500000]
Mn.element_num = 25

Fe = elements('Fe',  0.711200e+01,  0.842000, [], [], [], [], 7.860,9.274e+01, 55.850, [], [], 6.40300, 7.05700, 0.0, 0.0, 0.094, 0.71990000,  0.70680000,  0.0, 0.340000, []) 
Fe.ak = [14.3456, -1.23491, -0.423491, 0.0321661]
Fe.al = [13.6696, -2.39195, -0.137680, 0.0]
Fe.am = [0, 0, 0, 0]     # there is no am or an in the original fortran code, presumably because they're all zeroes still and someone forgot
Fe.an = [0, 0, 0, 0]     # ^
Fe.coh = [5.93292, 0.225038, -0.361748, 0.0193024]
Fe.cih = [-0.342379, 1.57245, -0.253198,  0.00985822]
Fe.fel = [0.00100000, 0.00630000, 0.00630000]
Fe.element_num = 26

#name, ek, el, ak, al, am, an, den, cf, atwt, coh, cih, ka, kb, la, lb, em
Co = elements('Co',  0.770900e+01,  0.929000, [], [], [], [], 8.90000, 97.8500, 58.933, [], [], 6.93000, 7.64900, 0.0,  0.0, 0.101000, 0.79330000,  0.77810000,  0.0, 0.373000, [])
Co.ak = [14.7047, -1.38933, -0.386631, 0.0303286]
Co.al = [13.8699, -2.50669, -0.0869945, 0.0]
Co.am = [0, 0, 0, 0]     
Co.an = [0, 0, 0, 0]     
Co.coh = [6.01478,  0.237959, -0.364056, 0.0194754]
Co.cih = [-0.428804, 1.64129, -0.266013, 0.0106512]
Co.fel = [0.00120000, 0.00770000, 0.00770000]
Co.element_num = 27

#28
Ni = elements('Ni', 8.33300, 1.01200, [], [], [], [], 8.90000, 97.4500,  58.690, [], [], 7.47700, 8.26400, 0.0,  0.0, 0.113000, 0.87200000,  0.85500000, 2.77200, 0.406000, [])
Ni.ak = [14.2388, -0.967736, -0.478070, 0.0366138]
Ni.al = [13.9848, -2.48080, -0.0888115,  0.0]
Ni.am = [0, 0, 0, 0]     
Ni.an = [0, 0, 0, 0]     
Ni.coh = [6.09024, 0.222770, -0.366568, 0.0196586]
Ni.cih = [-0.504360, 1.70040, -0.276443, 0.0112628]
Ni.fel = [0.00140000, 0.00860000, 0.00930000]
Ni.element_num = 28

Cu = elements('Cu', 8.97900, 1.10000, [], [], [], [], 8.94000, 105.500, 63.540, [], [], 8.04700, 8.90400, 0.0, 0.0, 0.120000, 0.95200000,  0.93200000,  2.87400, 0.440000, [])
Cu.ak = [14.5808, -1.18375, -0.413850, 0.0312088]
Cu.al = [14.2439, -2.58677, -0.0667398, 0.0]
Cu.am = [0, 0, 0, 0]     
Cu.an = [0, 0, 0, 0]     
Cu.coh = [6.17739, 0.273123, -0.372360,  0.0201638]
Cu.cih = [-0.570210, 1.75042, -0.2845550,  0.0116930]
Cu.fel = [0.00160000, 0.0100000, 0.0110000]
Cu.element_num = 29

Zn = elements('Zn', 9.65900, 1.19600, [], [], [], [], 7.14000, 108.600, 65.380, [], [], 8.63800, 9.57100, 1.00900, 1.03200, 0.139000, 1.04400, 1.02100,  5.68400, 0.474000, [])
Zn.ak = [14.4118, -0.933083, -0.477357, 0.0362829]
Zn.al = [14.3221, -2.62384, -0.0264926, 0.0]
Zn.am = [12.0597, -1.10258, 0, 0]     # 1st nonzeros in am
Zn.an = [0, 0, 0, 0]     
Zn.coh = [6.23402,  0.284312, -0.372143,  0.0200525]
Zn.cih = [-0.420535, 1.63400, -0.253646,  0.00927233]
Zn.fel = [0.00180000, 0.0110000, 0.0120000]
Zn.element_num = 30

#31
Ga = elements('Ga', 10.3670, 1.30200, [], [], [], [], 0.590300e+01, 0.115800e+03, 69.720, [], [], 9.25100, 10.2630, 1.09600, 1.12200, 0.158000, 1.14200,  1.11500,  5.67100, 0.507000, [])
Ga.ak = [13.6182, -0.318459, -0.611348, 0.0458138]
Ga.al = [14.4792, -2.54469, -0.0757204, 0.0]
Ga.am = [12.2646, -2.68965, 0, 0]     
Ga.an = [0, 0, 0, 0]     
Ga.coh = [6.28298,  0.291334, -0.369391,  0.0197029]
Ga.cih = [-0.358218, 1.60050, -0.244908,  0.00861898]
Ga.fel = [0.00210000, 0.0120000, 0.0130000]
Ga.element_num = 31

Ge = elements('Ge', 11.1040, 1.41400, [], [], [], [], 5.32300, 120.500, 72.590, [], [], 9.88500, 10.9810, 1.18600, 1.21600, 0.181000, 1.24900, 1.21800,  5.70400, 0.535000, [])
Ge.ak = [13.9288, -0.479613, -0.572897,  0.0431277]
Ge.al = [14.6813, -2.69285, -0.0208355, 0.0]
Ge.am = [12.4133, -2.53085, 0, 0]     
Ge.an = [0, 0, 0, 0]     
Ge.coh = [6.33896,  0.291512, -0.365643, 0.0192896]
Ge.cih = [-0.334383, 1.60327, -0.245555,  0.00871239]
Ge.fel = [0.00240000, 0.0130000, 0.0150000]
Ge.element_num = 32

As = elements('As', 11.8680, 1.53000, [], [], [], [], 0.573000e+01, 0.124400e+03, 74.92, [], [], 10.5430, 11.7250, 1.28200, 1.31700, 0.206000, 1.36000,  1.32500,  4.87500, 0.562000, [])
As.ak = [13.4722, -0.0773513, -0.660456,  0.0492177]
As.al = [14.6431, -2.48397, -0.0796180,  0.0]
As.am = [12.5392, -2.41380, 0, 0]     
As.an = [0, 0, 0, 0]     
As.coh = [6.39750,  0.288866, -0.361747,  0.0188788]
As.cih = [-0.339189, 1.62535, -0.250783,  0.00909103]
As.fel = [0.00280000, 0.0140000, 0.0160000]
As.element_num = 33

Se = elements('Se', 12.6580, 1.65300, [], [], [], [], 4.79000, 131.100, 78.9600, [], [], 11.2210,  12.4950, 1.41900,  1.37900,  0.232000, 1.47700,  1.43600,  4.58700, 0.589000, [])
Se.ak = [13.0756, 0.183235, -0.694264, 0.0502280]
Se.al = [14.7048, -2.38853, -0.105877,  0.0]
Se.am = [12.6773, -2.39750, 0, 0]     
Se.an = [0, 0, 0, 0]     
Se.coh = [6.45637,  0.286737, -0.358794,  0.0185618]
Se.cih = [-0.432927, 1.72833, -0.277138,  0.0111735]
Se.fel = [0.00320000, 0.0160000, 0.0180000]
Se.element_num = 34

#35
Br = elements('Br', 13.4740, 1.78200, [], [], [], [], 3.12000, 132.700, 79.9200, [], [], 11.9230, 13.2900, 1.48000,  1.52600, 0.257000, 1.59600, 1.55000,  4.55700, 0.618000, [])
Br.ak = [13.2273,  0.137130, -0.683203,  0.0495424]
Br.al = [14.8136, -2.42347, -0.0914590, 0.0]
Br.am = [12.7612, -2.37730, 0.0, 0.0]     
Br.an = [0, 0, 0, 0]     
Br.coh = [6.51444,  0.286324, -0.357027, 0.0183557]
Br.cih = [-0.448001, 1.76082, -0.285099,  0.0117865]
Br.fel = [0.00360000, 0.0180000, 0.0200000]
Br.element_num = 35

Kr = elements('Kr', 14.3220,  1.92000, [], [], [], [], 0.00374000, 139.100, 83.8000, [], [], 12.6480, 14.1120, 1.58700,  1.63800, 0.288000, 1.72600, 1.67500,  4.17000, 0.643000, [])
Kr.ak = [13.5927, -0.0305214, -0.651340,  0.0477616]
Kr.al = [14.9190, -2.42418, -0.0876447,  0.0]
Kr.am = [12.8898, -2.26021, 0.0, 0.0]     
Kr.an = [0, 0, 0, 0]     
Kr.coh = [6.57113, 0.287711, -0.356311, 0.0182470]
Kr.cih = [-0.391810, 1.73010, -0.276824,  0.0111280]
Kr.fel = [0.00410000, 0.0200000, 0.0220000]
Kr.element_num = 36

#37 l2, l3, lj3, [], []
Rb = elements('Rb',  15.2000, 2.06500, [], [], [], [], 1.53200, 141.900, 85.4800, [], [], 13.3940, 14.9600, 1.69400, 1.75200, 0.322000, 1.86300, 1.80500,  4.22300, 0.667000, [])
Rb.ak = [13.0204,  0.382736, -0.732427, 0.0529874]
Rb.al = [14.9985, -2.39108, -0.0959473,  0.0]
Rb.am = [13.0286, -2.38693, 0.0, 0.0]     
Rb.an = [0, 0, 0, 0]     
Rb.coh = [6.59750,  0.302389, -0.356755,  0.0181706]
Rb.cih = [-0.128039, 1.53044, -0.227403,  0.00739033]
Rb.fel = [0.00460000, 0.0220000, 0.0240000]
Rb.element_num = 37

Sr = elements('Sr', 16.1050, 2.21600, [], [], [], [], 2.54000, 145.500, 87.6200, [], [], 14.1640, 15.8340, 1.80600,  1.87200, 0.358000, 2.00700, 1.94000,  3.90600, 0.690000, [])
Sr.ak = [13.5888,  0.00220194, -0.638940,  0.0460070]
Sr.al = [15.0114, -2.28169, -0.126485, 0.0]
Sr.am = [13.1565, -2.36655, 0.0, 0.0]     
Sr.an = [0, 0, 0, 0]     
Sr.coh = [6.62203, 0.324559, -0.361651,  0.0184800]
Sr.cih = [0.0799161, 1.38397, -0.192225, 0.00478611]
Sr.fel = [0.00510000, 0.0240000, 0.0260000]
Sr.element_num = 38

Y = elements('Y ',  17.0800,  2.37300, [], [], [], [], 4.40500, 147.600, 88.9050, [], [], 14.9570, 16.7360, 1.92200, 1.99600, 0.395000, 2.15600, 2.08000,  4.03600, 0.710000, [])
Y.ak = [13.4674,  0.191023, -0.686616,  0.0497356]
Y.al = [15.1822, -2.38946, -0.0881174,  0.0]
Y.am = [13.2775, -2.43174, 0.0, 0.0]     
Y.an = [0, 0, 0, 0]     
Y.coh = [6.67096, 0.325070, -0.360613,  0.0183326]
Y.cih = [0.0629057, 1.41577, -0.199713, 0.00533312]
Y.fel = [0.00590000, 0.0260000, 0.0280000]
Y.element_num = 39

#40
Zr = elements('Zr', 17.9980, 2.53200, [], [], [], [], 6.53000, 151.500, 91.2200, [], [], 15.7740, 17.6660, 2.042000,  2.12400, 0.431000, 2.30700, 2.22300,  3.97600, 0.730000, [])
Zr.ak = [12.7538,  0.697409, -0.789307,  0.0564531]
Zr.al = [15.2906, -2.38703, -0.0912292, 0.0]
Zr.am = [13.4508, -2.50201, 0.0, 0.0]     
Zr.an = [0, 0, 0, 0]     
Zr.coh = [6.72275,  0.323964, -0.359463,  0.0181890]
Zr.cih = [0.0366697, 1.45207, -0.208122,  0.00595139]
Zr.fel = [0.00680000, 0.0280000, 0.0310000]
Zr.element_num = 40

Nb = elements('Nb', 18.9860, 2.69800, [], [], [], [], 8.57000, 154.300, 92.9060, [], [], 16.6140, 18.6210, 2.16600, 2.25700, 0.468000, 2.46500, 2.37100,  3.77400, 0.747000, [])
Nb.ak = [13.3843,  0.28102800, -0.686607,  0.0486607]
Nb.al = [15.2088, -2.20278, -0.13675900,  0.0]
Nb.am = [13.5434, -2.50135, 0.0, 0.0]     
Nb.an = [0, 0, 0, 0]     
Nb.coh = [6.79013,  0.311282, -0.355233,  0.0178231]
Nb.cih = [0.000202289, 1.49347, -0.217419,  0.00662245]
Nb.fel = [0.00940000, 0.0310000, 0.0340000]
Nb.element_num = 41

Mo = elements('Mo', 19.9990, 2.86600, [], [], [], [], 10.2200, 159.300, 95.9500, [], [], 17.4780,  19.6070, 2.29300,  2.39500, 0.505000, 2.62500,  2.52000,  3.67500, 0.765000, [])
Mo.ak = [13.9853, -0.117426, -0.591094,  0.0417843]
Mo.al = [15.3494, -2.26640, -0.116881,  0.0]
Mo.am = [13.6568, -2.48480, 0.0, 0.0]     
Mo.an = [0, 0, 0, 0]     
Mo.coh = [6.84600,  0.30279000, -0.351131,  0.0174403]
Mo.cih = [-0.0562860, 1.55778, -0.23334100,  0.00785506]
Mo.fel = [0.0100000, 0.0340000, 0.0370000]
Mo.element_num = 42

#43
Tc = elements('Tc', 21.0450, 3.04300, [], [], [], [], 11.5000, 164.400, 99.0000, [], [], 18.4100, 20.5850,  2.42400,  2.53800, 0.544000, 2.79300,  2.67700,  3.59100, 0.780000, [])
Tc.ak = [12.8214,  0.75199300, -0.78700600,  0.0558668]
Tc.al = [15.5086, -2.33733, -0.0987857, 0.0]
Tc.am = [13.7498, -2.44730,  0.0,  0.0]     
Tc.an = [0, 0, 0, 0]     
Tc.coh = [6.87599,  0.32616500, -0.35896900,  0.0180482]
Tc.cih = [0.0757616, 1.44950, -0.20489000,  0.00564745]
Tc.fel = [0.0110000, 0.0370000, 0.0400000]
Tc.element_num = 43

Ru = elements('Ru',  22.1170, 3.22400, [], [], [], [], 12.4100, 167.800, 101.070, [], [], 19.2780, 21.6550, 2.55800, 2.68300, 0.585000, 2.96700,  2.83800,  3.43100, 0.794000, [])
Ru.ak = [12.6658,  0.88502000, -0.81114400,  0.0573759]
Ru.al = [15.4734, -2.23080, -0.11945400, 0.0]
Ru.am = [13.8782, -2.48066, 0.0, 0.0]     
Ru.an = [0, 0, 0, 0]     
Ru.coh = [6.93136,  0.33479400, -0.36349700,  0.0184429]
Ru.cih = [-0.0424981, 1.54639, -0.22647000,  0.00718375]
Ru.fel = [0.0120000, 0.0400000, 0.0430000]
Ru.element_num = 44

Rh = elements('Rh', 23.2200, 3.41200, [], [], [], [], 12.4400, 170.900, 102.910, [], [], 20.2140, 22.7210, 2.69600, 2.83400, 0.627000, 3.14600,  3.00300,  3.72100, 0.808000, [])
Rh.ak = [12.1760, 1.19682, -0.86669700,  0.0606931]
Rh.al = [15.5757, -2.24976, -0.11337700,  0.0]
Rh.am = [14.0312, -2.61303, 0.0, 0.0]     
Rh.an = [0, 0, 0, 0]     
Rh.coh = [6.97547,  0.34639400, -0.36779400, 0.0187885]
Rh.cih = [-0.16039900,  1.64861, -0.25023800,  0.00893818]
Rh.fel = [0.0130000, 0.0430000, 0.0460000]
Rh.element_num = 45

#46
Pd = elements('Pd', 24.3500,  3.60500, [], [], [], [], 12.1600, 176.700, 106.400, [], [], 21.1750, 23.8160, 2.83800, 2.99000, 0.670000, 3.33000,  3.17300,  3.40200, 0.820000, [])
Pd.ak = [13.9389,  0.16452800, -0.66211700,  0.0476289]
Pd.al = [15.5649, -2.17229, -0.12765200,  0.0]
Pd.am = [14.1392, -2.57206, 0.0, 0.0]     
Pd.an = [0, 0, 0, 0]     
Pd.coh = [7.03216,  0.34983800, -0.37009900,  0.0189983]
Pd.cih = [-0.26756400, 1.73740, -0.26988300,  0.0103248]
Pd.fel = [0.0140000, 0.0470000, 0.0490000]
Pd.element_num = 46

Ag = elements('Ag', 25.5140, 3.80600, [], [], [], [], 10.5000, 179.100, 107.880, [], [],  22.1620, 24.9420,  2.98400, 3.15100, 0.717000, 3.52400,  3.35100,  3.22300, 0.831000, [])
Ag.ak = [13.3926,  0.44138000, -0.69371100,  0.0482085]
Ag.al = [15.6869, -2.22636, -0.11222300, 0.0]
Ag.am = [14.1673, -2.48078, 0.0, 0.0]     
Ag.an = [0, 0, 0, 0]     
Ag.coh = [7.06446,  0.36345600, -0.37359700,  0.0192478]
Ag.cih = [-0.16647500, 1.65794, -0.24874000,  0.00866218]
Ag.fel = [0.0160000, 0.0510000, 0.0520000]
Ag.element_num = 47

Cd = elements('Cd', 26.7110, 4.01800,[], [], [], [], 8.65000, 186.600, 112.410, [], [], 23.1720, 26.0930, 3.13300, 3.31600, 0.770000, 3.72700,  3.53700,  3.24900, 0.843000, [])
Cd.ak = [12.5254, 1.07714, -0.83142400,  0.0579120]
Cd.al = [15.9668, -2.38363, -0.0801104, 0.0]
Cd.am = [14.3497, -2.52756, 0.0, 0.0]     
Cd.an = [0, 0, 0, 0]     
Cd.coh = [7.09856,  0.37219900, -0.37534500,  0.0193481]
Cd.cih = [-0.0516701, 1.57426, -0.22764600,  0.00705650]
Cd.fel = [0.0180000, 0.0560000, 0.0560000]
Cd.element_num = 48

#49
In = elements('In',  0.279400e+02,  0.423800e+01, [], [], [], [], 7.28000, 190.700, 114.820, [], [], 24.2070, 27.2740, 3.28700, 3.48700, 0.825000, 3.93800,  3.73000,  3.25500, 0.853000, [])
In.ak = [11.8198, 1.45768, -0.88852900,  0.0605982]
In.al = [16.2101, -2.51838, -0.0540061, 0.0]
In.am = [14.4115, -2.49401, 0.0, 0.0]     
In.an = [0, 0, 0, 0]     
In.coh = [7.12708,  0.38208200, -0.37685500,  0.0194151]
In.cih = [-0.00817283, 1.55865, -0.22449200,  0.00685776]
In.fel = [0.0200000, 0.0610000, 0.0600000]
In.element_num = 49

Sn = elements('Sn',  0.292000e+02,  0.446500e+01,  [], [], [], [], 5.31000, 197.100, 118.690, [], [], 25.2700, 28.4830, 3.44400, 3.66200, 0.884000, 4.15600,  3.92900,  3.06000, 0.862000, [])
Sn.ak = [13.0323,  0.79078800, -0.76234900,  0.0527872]
Sn.al = [15.8638, -2.19019, -0.11353900, 0.0]
Sn.am = [14.5572, -2.56792, 0.0, 0.0]     
Sn.an = [0, 0, 0, 0]     
Sn.coh = [7.16085,  0.38551200, -0.37648100,  0.0193305]
Sn.cih = [0.0142151, 1.55754, -0.22473600,  0.00691395]
Sn.fel = [0.0370000, 0.0650000, 0.0640000]
Sn.element_num = 50

Sb = elements('Sb',  0.304910e+02,  0.469800e+01,  [], [], [], [], 6.69100, 202.200, 121.760, [], [], 26.3570, 29.7230, 3.60500, 3.84300, 0.944000, 4.38100,  4.13200,  2.93900, 0.870000, [])
Sb.ak = [9.06990, 3.28791, -1.26203,  0.0853470]
Sb.al = [15.7557, -2.04460, -0.14074500, 0.0]
Sb.am = [14.6268, -2.55562, 0.0, 0.0]     
Sb.an = [0, 0, 0, 0]     
Sb.coh = [7.19665,  0.38554300, -0.37505400,  0.0191608]
Sb.cih = [0.0156362, 1.57175, -0.22875300,  0.00726386]
Sb.fel = [0.0390000, 0.0690000, 0.0690000]
Sb.element_num = 51

#52 l2, l3, lj3, [], []
Te = elements('Te',  31.8130, 4.93900, [], [], [], [], 6.24000, 211.900, 127.600, [], [], 27.4710, 30.9930, 3.76900, 4.02900, 1.00600, 4.61200,  4.34100,  2.97900, 0.877000, [])
Te.ak = [11.6656, 1.71052, -0.94828100,  0.0653213]
Te.al = [16.1087, -2.27876, -0.0929405, 0.0]
Te.am = [14.7125, -2.54324, 0.0, 0.0]     
Te.an = [0, 0, 0, 0]     
Te.coh = [7.23460,  0.38249300, -0.37271500, 0.0189194]
Te.cih = [-0.0407579, 1.64267, -0.2478900,  0.00880567]
Te.fel = [0.0410000, 0.0740000, 0.0740000]
Te.element_num = 52

I = elements('I ', 33.1690, 5.18800, [], [], [], [], 4.94000, 210.700, 126.910, [], [], 28.6100, 32.2920, 3.93700, 4.22000, 1.07200, 4.85200,  4.55700,  2.85600, 0.884000, [])
I.ak = [12.1075, 1.43635, -0.88203800,  0.0603575]
I.al = [16.4086, -2.48214, -0.0507179, 0.0]
I.am = [14.7496, -2.48179, 0.0, 0.0]     
I.an = [0, 0, 0, 0]     
I.coh = [7.27415,  0.37722300, -0.36972800,  0.0186280]
I.cih = [-0.0404420, 1.65596, -0.25106700, 0.00904874]
I.fel = [0.0440000, 0.0790000, 0.0790000]

Xe = elements('Xe',  34.5820, 5.45200, [], [], [], [], 0.00590000, 218.000, 131.300, [], [], 29.8020, 33.6440, 4.11100,  4.42200, 1.14300, 5.10000,  4.78100,  2.87900, 0.891000, [])
Xe.ak = [11.0857, 2.08357, -1.01209,  0.0690310]
Xe.al = [16.3098, -2.31679, -0.0854498, 0.0]
Xe.am = [14.7603, -2.45068, 0.0, 0.0]     
Xe.an = [0, 0, 0, 0]     
Xe.coh = [7.31469,  0.37031500, -0.36628000,  0.0183025]
Xe.cih = [-0.00282407, 1.64039, -0.24764200,  0.00882144]
Xe.fel = [0.0460000, 0.0830000, 0.0850000]

#55
Cs = elements('Cs', 35.9850, 5.71300, [], [], [], [], 1.87300, 220.700, 132.910, [], [], 30.9700, 34.9840, 4.28600,  4.62000, 1.21800, 5.35900,  5.01200,  2.84700, 0.897000, [])
Cs.ak = [11.3750, 1.94161, -0.98323200,  0.0671986]
Cs.al = [16.5418, -2.46363, -0.0542849, 0.0]
Cs.am = [14.9713, -2.53145, 0.0, 0.0]     
Cs.an = [0, 0, 0, 0]     
Cs.coh = [7.33490,  0.37682500, -0.36571300, 0.0181843]
Cs.cih = [0.184861, 1.50030, -0.21333300, 0.00624264]
Cs.fel = [0.0490000, 0.0900000, 0.0910000]

Ba = elements('Ba', 37.4410, 5.98700, [], [], [], [], 3.50000, 228.100, 137.360, [], [], 32.1910, 36.3760, 4.46700, 4.82800, 1.29300, 5.62400,  5.24700,  2.83900, 0.902000, [])
Ba.ak = [10.2250, 2.67835, -1.12648, 0.0762669]
Ba.al = [16.6217, -2.48972, -0.0449623, 0.0]
Ba.am = [15.0844, -2.56341, 0.0, 0.0]     
Ba.an = [0, 0, 0, 0]     
Ba.coh = [7.35812,  0.37936100, -0.36409900, 0.0179817]
Ba.cih = [0.344376,  1.38742, -0.186356,  0.00424917]
Ba.fel = [00, 0.0520000, 0.0960000, 0.0970000]

La = elements('La', 38.9250, 6.26700, [], [], [], [], 6.15000, 230.700, 138.920, [], [], 33.4400, 37.7990, 4.65100,  5.04300, 1.36300, 5.89100,  5.48300,  2.71700, 0.907000, [])
La.ak = [10.9780, 2.23814, -1.03549, 0.0702339]
La.al = [16.3134, -2.20156, -0.0980569, 0.0]
La.am = [15.1863, -2.58287, 0.0, 0.0]     
La.an = [0, 0, 0, 0]     
La.coh = [7.39532,  0.36989500, -0.35937600, 0.0175406]
La.cih = [0.409104, 1.33075, -0.17088300,  0.00304111]
La.fel = [0.0550000, 0.10300000, 0.104000]
La.element_num = 57

#58
Ce = elements('Ce', 40.4440, 6.54900, [], [], [], [], 6.67000, 232.700, 0.140130e+03, [], [], 34.7170, 39.2550, 4.84000, 5.26200, 1.43400, 6.16500,  5.72400,  2.73700, 0.912000, [])
Ce.ak = [10.2725, 2.74562, -1.14174,  0.0774162]
Ce.al = [16.5862, -2.36288, -0.0654708, 0.0]
Ce.am = [15.2693, -2.58174, 0.0, 0.0]     
Ce.an = [0, 0, 0, 0]     
Ce.coh = [7.44255, 0.371328, -0.359642,  0.0175852]
Ce.cih = [0.439881, 1.30925, -0.16454800,  0.00252641]
Ce.fel = [0.0580000, 0.11000000, 0.111000]

#59
Pr = elements('Pr', 41.9910, 6.83500, [], [], [], [], 6.76900, 234.000, 140.920, [], [], 36.0230, 40.7460, 5.03400, 5.48900, 1.50800, 6.44100,  5.96500,  2.69500, 0.917000, [])
Pr.ak = [11.0156, 2.22056, -1.02216, 0.0690465]
Pr.al = [16.7118, -2.40326, -0.0612619, 0.0]
Pr.am = [15.3379, -2.57086, 0.0, 0.0]     
Pr.an = [0, 0, 0, 0]     
Pr.coh = [7.48347, 0.368431, -0.357689, 0.0174099]
Pr.cih = [0.449124, 1.30351, -0.161841, 0.00227394]
Pr.fel = [0.0610000, 0.11700000, 0.118000]

#60
#name, ek, el, ak, al, am, an, den, cf, atwt, coh, cih, ka, kb, la, lb, em, l2, l3, lj3, fek, fel
Nd = elements('Nd', 43.5690, 7.12600, [], [], [], [], 6.96000, 239.600, 144.270, [], [], 37.3590, 42.2690, 5.23000, 5.72100, 1.57500, 6.72200, 6.20800,  2.66200, 0.921000, [])
Nd.ak = [11.7632, 1.79481, -0.93666100,  0.0635332]
Nd.al = [16.5964, -2.26007, -0.0872426, 0.0]
Nd.am = [15.4335, -2.59006, 0.0, 0.0]     
Nd.an = [0, 0, 0, 0]     
Nd.coh = [7.52334,  0.36646200, -0.35604800,  0.0172620]
Nd.cih = [0.43728300, 1.31370, -0.16286600,  0.00229377]
Nd.fel = [0.0640000, 0.12400000, 0.125000]
Nd.element_num = 60

Pm = elements('Pm', 45.1840, 7.42800, [], [], [], [], 6.78200, 244.100, 147.000, [], [], 38.6490, 43.9450, 5.43250, 5.96100, 1.65100, 7.01300,  6.46000,  2.70200, 0.925000, [])
Pm.ak = [11.3864, 2.05593, -0.98818000,  0.0669106]
Pm.al = [16.8337, -2.38810, -0.0645041, 0.0]
Pm.am = [15.5131, -2.59623, 0.0, 0.0]     
Pm.an = [15.5131, -2.59623, 0.0, 0.0]     
Pm.coh = [7.56222,  0.36505500, -0.354511,  0.0171214]
Pm.cih = [0.40582300,  1.33837, -0.16722900,  0.00255570]
Pm.fel = [0.0660000, 0.13200000, 0.132000]
Pm.element_num = 61

Sm = elements('Sm',  46.8350, 7.73700, [], [], [], [], 7.53600, 249.600, 150.350, [], [], 40.1240, 45.4000, 5.63610, 6.20510, 1.72900, 7.31200,  6.71700,  2.68000, 0.929000, [])
Sm.ak = [11.9223, 1.79546, -0.942902, 0.0644202]
Sm.al = [16.8725, -2.39051, -0.0601080, 0.0]
Sm.am = [15.6000, -2.61328, 0.0, 0.0]     
Sm.an = [15.6006, -2.61328, 0.0, 0.0]     
Sm.coh = [7.60020,  0.36413400, -0.35308600,  0.0169894]
Sm.cih = [0.35538300, 1.37733, -0.17494100, 0.00306213]
Sm.fel = [0.0710000, 0.14000000, 0.139000]
Sm.element_num = 62

#63
Eu = elements('Eu',  48.5200, 8.05200, [], [], [], [], 5.25900, 252.400, 152.000, [], [], 41.5290, 47.0270, 5.84570, 6.45640, 1.80000, 7.61800,  6.97700,  2.72300, 0.932000, [])
Eu.ak = [11.6168, 1.97533, -0.97090100, 0.0658459]
Eu.al = [17.0692, -2.48046, -0.0447055, 0.0]
Eu.am = [15.7063, -2.63481, 0.0, 0.0]     
Eu.an = [15.7063, -2.63481, 0.0, 0.0]     
Eu.coh = [7.63711,  0.3639570, -0.35190000,  0.0168783]
Eu.cih = [0.28031600, 1.44016, -0.18864100, 0.00401226]
Eu.fel = [0.0750000, 0.14900000, 0.147000]
Eu.element_num = 63

Gd = elements('Gd', 50.2400, 8.37600, [], [], [], [], 7.950, 261.1, 157.260, [], [], 42.9830, 48.7180, 6.05720, 6.71320, 1.882, 7.93100,  7.24300,  2.70100, 0.935000, [])
Gd.ak = [9.91968, 3.03111, -1.17520, 0.0786750]
Gd.al = [17.1159, -2.47838, -0.0437107, 0.0]
Gd.am = [15.7159, -2.60843, 0.0, 0.0]     
Gd.an = [15.7159, -2.60843, 0.0, 0.0]      
Gd.coh = [7.66938, 0.35975200, -0.34889900,  0.0165890]
Gd.cih = [0.273133, 1.43842, -0.18613700,  0.00375240]
Gd.fel = [0.0790000, 0.15800000, 0.155000]
Gd.element_num = 64

Tb = elements('Tb', 51.9960, 8.70800, [], [], [], [], 8.27200, 263.900, 158.930, [], [], 44.4700, 50.3910, 6.27280, 6.97800, 1.96700, 8.25200,  7.51500,  2.71300, 0.938000, [])
Tb.ak = [11.3818, 2.14447, -0.99922200, 0.0675569]
Tb.al = [17.1499, -2.45507, -0.0471370,  0.0]
Tb.am = [15.8412, -2.64040, 0.0, 0.0]     
Tb.an = [15.8415, -2.64040, 0.0, 0.0]      
Tb.coh = [7.70798, 0.365345, -0.35003100,  0.0166927]
Tb.cih = [0.257539, 1.45064, -0.18759100, 0.00379932]
Tb.fel = [0.0830000, 0.16700000, 0.164000]
Tb.element_num = 65

#66
Dy = elements('Dy', 53.7890, 9.04700,  [], [], [], [], 8.53600, 269.800, 162.510, [], [], 45.9850, 52.1780, 6.49520, 7.24770, 2.04600, 8.58100,  7.79000,  9.04700, 0.941000, [])
Dy.ak = [11.4845, 2.10451, -0.989870, 0.0669382]
Dy.al = [17.3446, -2.54821, -0.0317606, 0.0]
Dy.am = [15.9225, -2.65289, 0.0, 0.0]     
Dy.an = [15.9225, -2.65289, 0.0, 0.0]      
Dy.coh = [7.74188,  0.36710700, -0.34943300, 0.0166273]
Dy.cih = [0.242685, 1.46266, -0.189102,  0.00385628]
Dy.fel = [0.0890000, 0.17800000, 0.174000]
Dy.element_num = 66

Ho = elements('Ho',  55.6180, 9.39500, [], [], [], [], 8.80300, 273.900, 164.940, [], [], 47.5280, 53.9340,  6.71980,  7.52530, 2.12700, 8.91900,  8.07100,  2.86300, 0.944000, [])
Ho.ak = [8.75203, 3.71822, -1.29273,  0.0855026]
Ho.al = [17.6583, -2.72523, -0.000819409, 0.0]
Ho.am = [16.0140, -2.67903, 0.0, 0.0]     
Ho.an = [16.0140, -2.67903, 0.0, 0.0]      
Ho.coh = [7.77470,  0.36972200, -0.34913200,  0.0165862]
Ho.cih = [0.22849300, 1.47438, -0.19055900,  0.00390903]
Ho.fel = [0.0940000, 0.18900000, 0.182000]
Ho.element_num = 67

Er = elements('Er',  57.4860, 9.75200, [], [], [], [], 9.05100, 277.700, 167.270, [], [], 49.0990, 55.6900, 6.94870, 7.81090, 2.21200, 9.26500,  8.35800,  2.93300, 0.947000, [])
Er.ak = [12.0195, 1.84815, -0.939582,  0.0638106]
Er.al = [17.7988, -2.74671, -0.00287580,  0.0]
Er.am = [16.0672, -2.67580, 0.0, 0.0]     
Er.an = [16.0672, -2.67580, 0.0, 0.0]      
Er.coh = [7.80643,  0.37322600, -0.34914700,  0.0165710]
Er.cih = [0.22523300,  1.48545, -0.19190800, 0.00395645]
Er.fel = [0.10000000, 0.20000000, 0.192000]
Er.element_num = 68

#69
Tm = elements('Tm',  59.3900,  10.1160, [], [], [], [], 9.33200, 280.500, 168.940, [], [], 50.7300, 57.5760, 7.18100, 8.10300, 2.30700, 9.61800,  8.64800,  2.75800, 0.949000, [])
Tm.ak = [12.5613, 1.57523, -0.89046700,  0.0609779]
Tm.al = [17.4250, -2.51103, -0.0329450, 0.0]
Tm.am = [16.1269, -2.67886, 0.0, 0.0]     
Tm.an = [16.1269, -2.67886, 0.0, 0.0]      
Tm.coh = [7.83711, 0.37754700, -0.34944100,  0.0165780]
Tm.cih = [0.20265600, 1.49625, -0.19323400,  0.00400233]
Tm.fel = [0.10600000, 0.21100000, 0.201000]
Tm.element_num = 69

Yb = elements('Yb',  61.3320, 10.4880, [], [], [], [], 6.97700, 287.300, 173.040, [], [], 52.3600, 59.3520,  7.41400,  8.40100, 2.39800, 9.97800,  8.94300,  2.57300, 0.951000, [])
Yb.ak = [7.42791, 4.28955, -1.35167, 0.0866136]
Yb.al = [16.9795, -2.22577, -0.0732557, 0.0]
Yb.am = [16.1794, -2.67715, 0.0, 0.0]     
Yb.an = [13.9111, -2.40380, 0.0, 0.0]      
Yb.coh = [7.86662, 0.38293300, -0.35012600, 0.0166173]
Yb.cih = [0.202248, 1.48804, -0.18914300, 0.00362264]
Yb.fel = [0.11200000, 0.22200000, 0.210000]

Lu = elements('Lu',  63.3140, 10.8700, [], [], [], [], 9.84200, 290.600, 174.990, [], [], 54.0630, 61.2820, 7.65400, 8.70800, 2.49200, 10.3490,  9.24400,  2.62000, 0.953000, [])
Lu.ak = [12.6387,  1.55476, -0.88109400,  0.0602036]
Lu.al = [17.2638, -2.37189, -0.0495994, 0.0]
Lu.am = [16.2289, -2.67128, 0.0, 0.0]     
Lu.an = [13.9813, -2.40841, 0.0, 0.0]      
Lu.coh = [7.89137,  0.38603400, -0.34975600, 0.0165480]
Lu.cih = [1971760, 1.50264, -0.19247400,  0.00385751]
Lu.fel = [0.12000000, 0.23400000, 0.220000]

#72
Hf = elements('Hf', 65.3510, 11.2720, [], [], [], [], 13.3000, 296.400, 178.500, [], [], 55.7570, 63.2090, 7.89800, 9.02100, 2.60200, 10.7390,  9.56100,  2.41500, 0.955000, [])
Hf.ak = [7.58160, 4.47037, -1.42808, 0.0939044]
Hf.al = [16.4329, -1.82851, -0.13226800,  0.0]
Hf.am = [16.2758, -2.66220, 0.0, 0.0]     
Hf.an = [14.0548, -2.42829, 0.0, 0.0]      
Hf.coh = [7.91803,  0.38702100, -0.34888100,  0.0164406]
Hf.cih = [0.19946900, 1.50233, -0.19138500,  0.00374011]
Hf.fel = [0.12800000, 0.24600000, 0.231000]

Ta = elements('Ta', 67.4140,  11.6800,  [], [], [], [], 16.6000, 300.500, 180.950, [], [], 57.5240, 65.2100,  8.14500,  9.34100, 2.70300, 11.1360,  9.88100,  2.60000, 0.957000, [])
Ta.ak = [8.65271, 3.73117, -1.26359,  0.0823539]
Ta.al = [17.2411, -2.30313, -0.0591006, 0.0]
Ta.am = [16.3038, -2.66148, 0.0, 0.0]     
Ta.an = [14.1313, -2.47214, 0.0, 0.0]      
Ta.coh = [7.94534, 0.38729900, -0.34792600, 0.0163230]
Ta.cih = [0.19687100,  1.50623, -0.19139600,  0.00370889]
Ta.fel = [0.13700000, 0.258000, 0.243000]

W = elements('W ',  69.5240, 12.0980, [], [], [], [], 19.3000, 305.400, 183.920, [], [], 59.3100, 67.2330, 8.39600, 9.67000, 2.81800, 11.5420,  10.2040,  2.61700, 0.958000, [])
W.ak = [7.57541, 4.28874, -1.34998,  0.0865200]
W.al = [17.2533, -2.23874, -0.0727338, 0.0]
W.am = [16.2613, -2.60672, 0.0, 0.0]     
W.an = [14.1536, -2.32580, 0.0, 0.0]      
W.coh = [7.97266, 0.38770400, -0.34715500,  0.0162372]
W.cih = [0.191015, 1.51240, -0.19122000, 0.00371450]
W.fel = [0.14700000, 0.27000000, 0.255000]

#75
Re = elements('Re',  71.6760, 12.5250, [], [], [], [], 21.0200, 309.200, 186.200,  [], [], 61.1310, 69.2980,  8.65100,  10.0080,  2.93100, 11.9570,  10.5340,  2.67500, 0.959000, [])
Re.ak = [1.36944,  7.79444, -1.99822,  0.126225]
Re.al = [17.8750, -2.61051, -0.0136093, 0.0]
Re.am = [16.3564, -2.62453, 0.0, 0.0]     
Re.an = [14.2392, -2.35326, 0.0, 0.0]      
Re.coh = [7.99940,  0.38873900, -0.34672600,  0.0161751]
Re.cih = [0.18964400,  1.50867, -0.18957000, 0.00349584]
Re.fel = [0.14400000, 0.28300000, 0.268000]

Os = elements('Os', 73.8720, 12.9640, [], [], [], [], 22.5000, 315.800, 190.200, [], [], 62.9910, 71.4040, 8.91000,  10.3540, 3.05000, 12.3840,  10.8710,  2.52900, 0.961000, [])
Os.ak = [13.7534, 1.02122, -0.77712600,  0.0538811]
Os.al = [17.3525, -2.28550, -0.0588047,  0.0]
Os.am = [16.4233, -2.63163, 0.0, 0.0]     
Os.an = [14.2795, -2.21971, 0.0, 0.0]      
Os.coh = [8.02574,  0.39045800, -0.34665800, 0.0161455]
Os.cih = [0.11644800, 1.57615, -0.20533200,  0.00466731]
Os.fel = [0.13000000, 0.29500000, 0.281000]

Ir = elements('Ir',  76.1120, 13.4240, [], [], [], [], 22.4200, 319.100, 192.200, [], [], 64.8860, 73.5490, 9.17300, 10.7060, 3.17200, 12.8240,  11.2150,  2.38700, 0.962000, [])
Ir.ak = [12.5506, 1.63090, -0.87567600,  0.0592011]
Ir.al = [16.5270, -1.76315, -0.13523200,  0.0]
Ir.am = [16.5144, -2.64832,  0.0, 0.0]     
Ir.an = [14.3422, -2.40183, 0.0, 0.0]      
Ir.coh = [8.05150,  0.39314300, -0.34705200,  0.0161570]
Ir.cih = [0.0719908, 1.61204, -0.21318600, 0.00520497]
Ir.fel = [0.12000000, 0.30800000, 0.294000]

#78
Pt = elements('Pt',  78.3950,  13.8920, [], [], [], [], 21.3700, 323.900, 195.090, [], [], 66.8200, 75.7360, 9.44100,  11.0690, 3.29700, 13.2730,  11.5640,  2.63200, 0.963000, [])
Pt.ak = [12.7882, 1.63605, -0.89852300,  0.0618550]
Pt.al = [17.3636, -2.21120, -0.0730934, 0.0]
Pt.am = [16.7024, -2.71631, 0.0, 0.0]     
Pt.an = [14.3785, -2.34834,  0.0, 0.0]      
Pt.coh = [8.08084,  0.39579000, -0.34803200, 0.0162345]
Pt.cih = [0.0420186, 1.63611, -0.21796400,  0.00552670]
Pt.fel = [0.11400000, 0.32100000, 0.306000]

Au = elements('Au',  80.7230, 14.3530,  [], [], [], [], 19.3700, 327.400, 197.200, [], [], 68.7790, 77.9680, 9.71100, 11.4390, 3.42500, 13.7330,  11.9180,  2.43900, 0.964000, [])
Au.ak = [4.96352, 5.79212, -1.61842,  0.102911]
Au.al = [17.4240, -2.23911, -0.0663720, 0.0]
Au.am = [16.4734, -2.57834, 0.0, 0.0]     
Au.an = [14.4398, -2.32838, 0.0, 0.0]      
Au.coh = [8.10524,  0.40057600, -0.34934000, 0.0163264]
Au.cih = [0.0156916, 1.65406, -0.22098200, 0.00570751]
Au.fel = [0.10700000, 0.33400000, 0.320000]

Hg = elements('Hg',  83.1030, 14.8460, [], [], [], [], 13.5460, 333.100, 200.610, [], [], 70.8210, 80.2580,  9.98700,  11.8230, 3.56200, 14.2090,  12.2840,  2.40000, 0.965000, [])
Hg.ak = [19.7594, -1.97990, -0.27698100, 0.0268856]
Hg.al = [17.1857, -2.08470, -0.0853294, 0.0]
Hg.am = [16.5903, -2.60670,  0.0, 0.0]     
Hg.an = [14.5195, -2.33016, 0.0, 0.0]      
Hg.coh = [8.12542, 0.40585800, -0.35032900,  0.0163772]
Hg.cih = [0.11458700,  1.58076, -0.20296800, 0.00435692]
Hg.fel = [0.10700000, 0.34700000, 0.333000]

Tl = elements('Tl',  85.5280, 15.3440, [], [], [], [], 11.8600, 339.400, 204.390, [], [], 72.8600, 82.5580, 10.2660, 12.2100, 3.70000, 14.6980, 12.6570,  2.49800, 0.966000, [])
Tl.ak = [15.2879, 0.27366400, -0.63889000,  0.0457495]
Tl.al = [17.7379, -2.37745, -0.0433223,  0.0]
Tl.am = [16.6564, -2.61593, 0.0, 0.0]     
Tl.an = [14.5473, -2.26773, 0.0, 0.0]      
Tl.coh = [8.14399,  0.40869200, -0.34980200,  0.0162880]
Tl.cih = [0.14705200, 1.56695, -0.20034700, 0.00420901]
Tl.fel = [0.10700000, 0.36000000, 0.347000]

#82
Pb = elements('Pb',  88.0060, 15.8600, [], [], [], [], 11.3400, 344.100, 207.210, [], [], 74.9570,  84.9220,  10.5490, 12.6110, 3.85000, 15.1980,  13.0350,  2.46600, 0.967000, [])
Pb.ak = [8.63374, 3.69400, -1.21312e+01, 0.0774601]
Pb.al = [17.7963, -2.37691, -0.0455883,  0.0]
Pb.am = [16.7131, -2.61538, 0.0, 0.0]     
Pb.an = [14.5771, -2.25279, 0.0, 0.0]      
Pb.coh = [8.1599600, 0.418031,  -0.352330,  0.0164660]
Pb.cih = [0.182167, 1.5466100,  -0.195973,  0.00390772]
Pb.fel = [0.11200000, 0.37300000, 0.360000]

#83
Bi = elements('Bi',  90.5270, 16.3850, [], [], [], [], 9.80000, 347.000, 209.000, [], [], 77.0970, 87.3350, 10.8360, 13.0210, 3.99900, 15.7080,  13.4180,  2.33800, 0.968000, [])
Bi.ak = [9.44293, 3.44965, -1.19886,  0.0783484]
Bi.al = [17.5348, -2.23353, -0.0596161, 0.0]
Bi.am = [16.7078, -2.58648, 0.0, 0.0]     
Bi.an = [14.6832, -2.30940, 0.0, 0.0]      
Bi.coh = [8.17489,  0.42791600, -0.35506800,  0.0166601]
Bi.cih = [0.189860, 1.56125, -0.20093200,  0.00436768]
Bi.fel = [0.11700000, 0.38700000, 0.373000]

""" 84, 85
      data fek(84),fel(1,84),fel(2,84),fel(3,84)/
     $     0.968000E+00, 0.122000E+00, 0.401000E+00, 0.386000E+00/
      data fek(85),fel(1,85),fel(2,85),fel(3,85)/
     $     0.969000E+00, 0.128000E+00, 0.415000E+00, 0.399000E+00/
"""
Po = elements('Po', int, int, [], [], [], [], int, int, int, [], [], int, int, int, int, int, int, int, int, int, [])
#will it be upset about this?
At = elements('At', 0, 0, [], [], [], [], 0, 0, 0, [], [], 0, 0, 0, 0, 0, 0, 0, 0, 0, [])

#86
Rn = elements('Rn',  98.4170, 18.0550, [], [], [], [], 0.00973000, 368.600, 222.000, [], [], 83.8000, 94.8770, 11.7240,  14.3160, 4.47800, 17.3340,  14.6120,  2.34400, 0.969000, [])
Rn.ak = [15.1782, 0.34902000, -0.63763800,  0.0451377]
Rn.al = [17.5028, -2.14876, -0.0724638,  0.0]
Rn.am = [16.9000, -2.60945, 0.0, 0.0]     
Rn.an = [14.7243, -2.12905, 0.0, 0.0]      
Rn.coh = [8.22553, 0.45147800, -0.36205600,  0.0171556]
Rn.cih = [0.19661900, 1.60080, -0.21380000, 0.00551717]
Rn.fel = [0.13400000, 0.42900000, 0.411000]

""" 87-89
      data fek(87),fel(1,87),fel(2,87),fel(3,87)/
     $     0.970000E+00, 0.139000E+00, 0.443000E+00, 0.424000E+00/
      data fek(88),fel(1,88),fel(2,88),fel(3,88)/
     $     0.970000E+00, 0.146000E+00, 0.456000E+00, 0.437000E+00/
      data fek(89),fel(1,89),fel(2,89),fel(3,89)/
     $     0.971000E+00, 0.153000E+00, 0.468000E+00, 0.450000E+00/

"""
Fr = elements('Fr', 0, 0, [], [], [], [], 0, 0, 0, [], [], 0, 0, 0, 0, 0, 0, 0, 0, 0, [])
Ra = elements('Ra', 0, 0, [], [], [], [], 0, 0, 0, [], [], 0, 0, 0, 0, 0, 0, 0, 0, 0, [])
Ac = elements('Ac', 0, 0, [], [], [], [], 0, 0, 0, [], [], 0, 0, 0, 0, 0, 0, 0, 0, 0, [])

#90
Th = elements('Th',  109.649, 20.4700, [], [], [], [], 11.7000, 385.200, 232.000, [], [], 93.3340, 105.592,  12.9660,  16.2000, 5.18200, 19.6920,  16.3000,  2.38800, 0.971000, [])
Th.ak = [13.4336, 1.34805, -0.81328000,  0.0555664]
Th.al = [18.5481, -2.61281, -0.00790574,  0.0]
Th.am = [17.0483, -2.58569, 0.0, 0.0]     
Th.an = [14.7730, -1.91192, 0.0, 0.0]      
Th.coh = [8.27843, 0.47905600, -0.36765700,  0.0174621]
Th.cih = [0.17089000, 1.65561, -0.22970200,  0.00692516]
Th.fel = [0.16100000, 0.47900000, 0.463000]

""" 91
      data fek(91),fel(1,91),fel(2,91),fel(3,91)/
     $     0.972000E+00, 0.162000E+00, 0.472000E+00, 0.476000E+00/
"""
Pa = elements('Pa', 0, 0, [], [], [], [], 0, 0, 0, [], [], 0, 0, 0, 0, 0, 0, 0, 0, 0, [])

#92
U = elements('U ',  115.603, 21.7560, [], [], [], [], 238.070, 19.0500, 395.300, [], [], 98.4280, 111.289, 13.6130, 17.2180, 5.54900, 20.9470,  17.1660,  2.29200, 0.972000, [])
U.ak = [13.7951, 1.23983, -0.80154500,  0.0553596]
U.al = [17.5258, -2.07237, -0.0723932,  0.0] #is the e+06 on the 2nd item a typo? Most other nearby elements have e+01 in this spot
U.am = [17.0353, -2.56903, 0.0, 0.0]     
U.an = [14.9036, -2.12148, 0.0, 0.0]      
U.coh = [8.33010,  0.47831400, -0.36725000,  0.0174129]
U.cih = [0.10827700,  1.74158, -0.25410400,  0.00895056]
U.fel = [0.17600000, 0.46700000, 0.489000]

""" 93
      data fek(93),fel(1,93),fel(2,93),fel(3,93)/
     $     0.973000E+00, 0.187000E+00, 0.466000E+00, 0.502000E+00/
"""
Np = elements('Np', 0, 0, [], [], [], [], 0, 0, 0, [], [], 0, 0, 0, 0, 0, 0, 0, 0, 0, [])

#94
Pu = elements('Pu',  121.760, 23.0950, [], [], [], [], 19.7000, 397.000, 239.100, [], [], 103.653, 117.146,  14.2790, 18.2780, 5.91400, 22.2630,  18.0530,  2.25100, 0.973000, [])
Pu.ak = [18.2787, -1.17371, -0.36834400,  0.0298738]
Pu.al = [17.5519, -2.02162, -0.0822940,  0.0]
Pu.am = [17.2953, -2.62164, 0.0, 0.0]     
Pu.an = [14.8535, -1.87733, 0.0, 0.0]      
Pu.coh = [8.38174,  0.47708500, -0.36655600,  0.0173422]
Pu.cih = [0.0388791, 1.82229, -0.27609900,  0.0107392]
Pu.fel = [0.20500000, 0.46400000, 0.514000]

#95
"""
Am = elements('Am',  124.982, 23.8080,  [], [], [], [],  19.7000, 397.000, 239.100, [], [], 106.472, 120.284,  14.6200,  18.8560, 6.13300, 22.9520,  18.5100,  2.25100, 0.973000, [])
Am.ak = [18.2787, -1.17371, -0.36834400,  0.0298738]
Am.al = [17.5519, -2.02162, -0.0822940, 0.0]
Am.am = [17.2953, -2.62164, 0.0, 0.0]     
Am.an = [14.8535, -1.87733,  0.0, 0.0]      
Am.coh = [8.38174,  0.47708500, -0.36655600,  0.0173422]
Am.cih = [0.0388791, 1.82229, -0.27609900,  0.0107392]
Am.fel = [0.20500000, 0.46400000, 0.514000]
Am.element_num = 95

 #name, ek, el, ak, al, am, an, den, cf, atwt, coh, cih, ka, kb, la, lb, em

Am.ak = []
Am.al = []
Am.am = [ 0.0, 0.0]     
Am.an = [ 0.0, 0.0]      
Am.coh = []
Am.cih = []

Do not have
 "Po", "At" (84, 85), "Fr", "Ra", "Ac" (87-89), "Pa" (91), "Np" (93), 
 "Cm", "Bk", "Cf", "Es", "Fm", "Md", "No", "Lr", "Rf", "Db", "Sg", "Bh", 
 "Hs", "Mt", "Ds", "Rg", "Cn", "Nh", "Fl", "Mc", "Lv", "Ts", "Og" (96-118) 
"""
##################################################### 
################ programme starts ###################
#####################################################
def mucal(en, mane, z, unit, xsec, energy, fly, erf, er):
    
    xsec = [None]*10
    
    #nested function
    def fortranLineEighty(): #80
        elmName.bax = math.exp(summ)               #appends bax attribute
        elmName.ba_noedge_x = math.exp(sumbelow)   #appends ba_noedge_x attribute
        if (e > elmName.l3 and e < elmName.l2):
        #L3 edge, correct for L1 in bax, just use M for noedge
            elmName.bax = elmName.bax/(lj1*lj2)
        else:
            pass
        if (e > elmName.l2 and e < elmName.el): 
        #L2 edge, correct for L1 in bax, noedge using L3
            elmName.ba_noedge_x = elmName.bax/(lj1*lj2) #must do in this order
            elmName.bax = elmName.bax/lj1 #or else bax gets corrected twice
        else:
            pass
        if (e > elmName.el and e < elmName.ek):
        #L1 edge, bax is correct, noedge using L2
            elmName.ba_noedge_x = elmName.bax/lj1
        else:
            pass
    #end nested function

    ###########
    if z in (84, 85, 87, 88, 89, 91, 93):
        er = 3
        #if(erf)                        #I don't see how 'erf' becomes true or false
        print("no doc for z = 84, 85, 87-89, 91, 93")
    elif mane in ("Po", "At", "Fr", "Ra", "Ac", "Pa", "Np"):
        er = 3
        #if(erf)                        #I don't see how 'erf' becomes true or false
        print("no doc for mane = Po, At, Fr, Ra, Ac, Pa, Np")
    elif z == 0 and mane == '': 
        er = 7
        #if(erf)                        #I don't see how 'erf' becomes true or false
        print('no name no z what do you want?')
    
    elif z > 94:
        er = 4
        #if(erf)                        #I don't see how 'erf' becomes true or false
        print("no doc for z > 94")
        
    elif mane != '': #goto 10 ... a name exists in the mucal function input, introduce the corresponding class for string input
        #10 j=1 
        #   call upcase(mane)
        #checking the name
        #11   if(j.le.94.and.mane.eq.name(j)) then
        #Seems 11 is supposed to loop until name(j) and mane match, then set the given z = 0 to the appropriate value
        try: 
            elmName = eval(mane)                        #convert mane (should be a string, allegedly) to class
            correctionForZ = 1
            while correctionForZ <= 95:
                if correctionForZ == elmName.element_num:
                    z = correctionForZ                       #z is corrected from 0 input now
                    break
        #goto 20
                #elif correctionForZ == 95:
                #    er = 2
                #    #if(erf) print*,'**WRONG NAME**'
                #    print('WRONG NAME')""" 
                #I don't think this commented out elif is needed? I think this is covered by the following "except"
                else:
                    pass
                correctionForZ = correctionForZ + 1 
        except NameError:
            er = 2
            #    #if(erf) print*,'**WRONG NAME**'
            print('WRONG NAME')

        #20 - I need to do line 20 stuff

    #calculation starts
    else: #mane = '' and z > 0 and z <= 94
        elmClassArr = [H, He, Li, Be, B, C, N, O, F, Ne, Na, Mg, Al, Si, P, S, Cl, Ar, K, Ca, Sc, Ti, V, Cr, Mn, Fe, Co, Ni, Cu, Zn, Ga, Ge, As, Se, Br, Kr, Rb, Sr, Y, Zr, Nb, Mo, Tc, Ru, Rh, Pd, Ag, Cd, In, Sn, Sb, Te, I, Xe, Cs, Ba, La, Ce, Pr, Nd, Pm, Sm, Eu, Gd, Tb, Dy, Ho, Er, Tm, Yb, Lu, Hf, Ta, W, Re, Os, Ir, Pt, Au, Hg, Tl, Pb, Bi, Po, At, Rn, Fr, Ra, Ac, Th, Pa, U, Np, Pu]
        #need to make empty mane equal the correct string for element name somehow
        correctionForMane = 1
        while correctionForMane < len(elmClassArr):
            if z == elmClassArr[correctionForMane].element_num:
                mane = elmClassArr[correctionForMane].name
                break
            else:
                pass
            correctionForMane = correctionForMane + 1

        mane = elmName.name
        elmName = eval(mane)                        #convert mane (should be a string, allegedly) to class
        #n=z
        #mane=name(n)
        #goto 20
        elm = elmName.name
        print(elm, "is an excellent choice")
        #20 checking for zero energy input
        if en == 0:
            er = 1
            #if(erf)
            print("can't calculate zero energy")
            #goto 10001
        elif e < 0:
            #goto 20000
            #20000
            xsec[7] = elmName.atwt
            xsec[8] = elmName.den
        else:
            e = en
            if e < elmName.ek and e > elmName.ek-0.001:
                #goto 39
                er = 6
                #if (erf) print print*,'**energy at the middle of edge using pre-edge fit results may be wrong**'

            else:
                #goto 38
                #38 - selecting correct range
                if e > elmName.ek:
                    print("debug in mucal: a K edge", e ) #goto 70  ! a K edge
                    #70
                    for i in range(len(elmName.ak)): #do 400
                        bsum = elmName.ak[i]*(math.log(e))**i
                        belowsum = elmName.al[i]*(math.log(e))**i
                        #what's with the indent in the fortran code
                        summ = summ + bsum              #sum is a function in python so it is replaced here with two m's
                        sumbelow = sumbelow + belowsum
                    #400 continue /n end
                    #80
                    fortranLineEighty()
                    
                #38
                elif (e < elmName.ek and e > elmName.l2):
                    print('DEBUG in mucal: an L1,2 edge',e)
                    #goto 40    ! an L1,2 edge
                    #start calculation at last
                    #40   do 100 i=0,3 	! an L1,2 edge
                    for i in range(len(elmName.al)):
                        bsum = elmName.al[i]*(math.log(e))**i
                        belowsum = elmName.al[i]*(math.log(e))**i
                        summ = summ + bsum
                        sumbelow = sumbelow + belowsum
                    #100  continue
                    print('DEBUG in mucal: summ =', str(summ) + ', sumbelow = ', str(sumbelow) + 
                        ', exp(summ) = ', str(math.exp(summ)) + ', exp(sumbelow) = ', str(math.exp(sumbelow)))
                    #goto 80
                    #80
                    fortranLineEighty()
                    
                    #Does it just go to 89 after 80 no matter what?
                    #89 goes after many things so there should maybe be a function for it
                    #89 do 90 i = 0,3
                    for i in range(len(elmName.coh)):
                        csum = elmName.coh[i]*(math.log(e))**i
                        chs = chs + csum
                    #90 continue
                    bcox = math.exp(chs)
                    for i in range(len(elmName.cih)): #do 500
                        cisum = elmName.cih[i]*(math.log(e))**i
                        cis = cis + cisum
                    #500 continue
                    binx = math.exp(cis)
                    btox = elmName.bax + bcox + binx
                    bto_noedge_x = elmName.ba_noedge_x + bcox + binx


                else:
                    print("")


"""
c     error codes:                                                     |
c     er=1: energy input is zero                                       |
c     er=2: name does not match                                        |
c     er=3: no documentation for given element (z<94)                  |
c     er=4: no documentation for given element (z>94)                  |
c     er=5: l-edge calculation may be wrong for z<30 as mcmaster       |
c     uses l1 only.                                                    |
c     er=6: energy at the middle of edge                               |
c     er=7: no name or z supplied                                      |

#################################################################
Exception handling Python: Python Custom Exceptions example from tutorial
https://www.datacamp.com/community/tutorials/exception-handling-python
class UnAcceptedValueError(Exception):   
    def __init__(self, data):    
        self.data = data
    def __str__(self):
        return repr(self.data)

Total_Marks = int(input("Enter Total Marks Scored: "))
try:
    Num_of_Sections = int(input("Enter Num of Sections: "))
    if(Num_of_Sections < 1):
        raise UnAcceptedValueError("Number of Sections can't be less than 1")
except UnAcceptedValueError as e:
    print ("Received error:", e.data)

"""